{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.5\\\\client\\\\src\\\\components\\\\ListChat.js\",\n  _s = $RefreshSig$();\nimport FriendCard from './FriendCard';\nimport SearchBar from './SearchBar';\nimport { useEffect, useState, useRef } from 'react';\nimport socket from '../socket/socket-client';\nimport chatStyle from '../styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListChat({\n  setSelectedFriend\n}) {\n  _s();\n  const [listChat, setListChat] = useState([]);\n  const user = useRef(JSON.parse(sessionStorage.getItem(\"userAuth\")).user._id);\n  useEffect(() => {\n    const storedSocketId = localStorage.getItem('socketId');\n    const socket = io.connect('your_socket_server_url', {\n      query: {\n        token: 'your_authentication_token'\n      },\n      reconnection: true,\n      // Enable reconnection\n      forceNew: true,\n      // Create a new connection if needed\n      transportOptions: {\n        polling: {\n          extraHeaders: {\n            'previous-socket-id': storedSocketId\n          }\n        }\n      }\n    });\n    console.log(\"Socket-id\", socket.id);\n\n    // Save the socket ID to localStorage\n    localStorage.setItem('socketId', socket.id);\n    socket.emit('getContacts', user.current);\n    socket.on('getContacts', getContacts);\n    return () => {\n      socket.off('getContacts', getContacts);\n    };\n  }, []);\n  function getContacts(contacts) {\n    setListChat(contacts);\n    setSelectedFriend(contacts[0]);\n    sessionStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n  const handleFriendClick = friend => {\n    setSelectedFriend(friend);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"right-side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"list-listChat\",\n      className: \"wrap-list-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-25\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"heading ml-13\",\n          children: \"H\\u1ED9p th\\u01B0 \\u0111\\u1EBFn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-item\",\n          children: listChat.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFriendClick(contact),\n            className: \"row justify-content-space-between\",\n            children: /*#__PURE__*/_jsxDEV(FriendCard, {\n              name: `${contact.friend.firstName} ${contact.friend.lastName}`,\n              unreadMessage: 2,\n              avatar: contact.friend.avatar,\n              content: contact.latest_message.message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ListChat, \"oyHF3hpwzjW5Y/6/Hb7ozoeFes0=\");\n_c = ListChat;\nvar _c;\n$RefreshReg$(_c, \"ListChat\");","map":{"version":3,"names":["FriendCard","SearchBar","useEffect","useState","useRef","socket","chatStyle","jsxDEV","_jsxDEV","ListChat","setSelectedFriend","_s","listChat","setListChat","user","JSON","parse","sessionStorage","getItem","_id","storedSocketId","localStorage","io","connect","query","token","reconnection","forceNew","transportOptions","polling","extraHeaders","console","log","id","setItem","emit","current","on","getContacts","off","contacts","stringify","handleFriendClick","friend","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","map","contact","index","onClick","name","firstName","lastName","unreadMessage","avatar","content","latest_message","message","text","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.5/client/src/components/ListChat.js"],"sourcesContent":["import FriendCard from './FriendCard';\r\nimport SearchBar from './SearchBar';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport socket from '../socket/socket-client';\r\nimport chatStyle from '../styles/chat.css';\r\n\r\nexport default function ListChat({ setSelectedFriend }) {\r\n  const [listChat, setListChat] = useState([]);\r\n  const user = useRef(JSON.parse(sessionStorage.getItem(\"userAuth\")).user._id);\r\n\r\n  useEffect(() => {\r\n    const storedSocketId = localStorage.getItem('socketId');\r\n    const socket = io.connect('your_socket_server_url', {\r\n      query: { token: 'your_authentication_token' },\r\n      reconnection: true, // Enable reconnection\r\n      forceNew: true, // Create a new connection if needed\r\n      transportOptions: {\r\n        polling: {\r\n          extraHeaders: {\r\n            'previous-socket-id': storedSocketId,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log(\"Socket-id\", socket.id);\r\n\r\n    // Save the socket ID to localStorage\r\n    localStorage.setItem('socketId', socket.id);\r\n\r\n    socket.emit('getContacts', user.current);\r\n\r\n    socket.on('getContacts', getContacts);\r\n\r\n    return () => {\r\n      socket.off('getContacts', getContacts);\r\n    };\r\n\r\n  }, []);\r\n  \r\n  function getContacts(contacts) {\r\n    setListChat(contacts);\r\n    setSelectedFriend(contacts[0]);\r\n    \r\n    sessionStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }\r\n\r\n  const handleFriendClick = (friend) => {\r\n    setSelectedFriend(friend);\r\n  };\r\n\r\n  return (\r\n    <div id=\"right-side-bar\">\r\n      <SearchBar placeholder=\"Search anything\" />\r\n      <div id='list-listChat' className='wrap-list-item'>\r\n        <div className=\"mt-25\">\r\n          <b className=\"heading ml-13\">Hộp thư đến</b>\r\n          <ul className=\"list-item\">\r\n            {listChat.map((contact, index) => (\r\n              <li key={index} onClick={() => handleFriendClick(contact)} className=\"row justify-content-space-between\">\r\n                <FriendCard\r\n                  name={`${contact.friend.firstName} ${contact.friend.lastName}`}\r\n                  unreadMessage={2}\r\n                  avatar={contact.friend.avatar}\r\n                  content={contact.latest_message.message.text}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}