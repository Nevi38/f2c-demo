{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.2\\\\client\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Post from \"./Post\";\nimport io from \"socket.io-client\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SOCKET;\nconst socket = io(server, {\n  transports: [\"websocket\"]\n});\nexport default function PostList() {\n  _s();\n  const [fromPage, setFromPage] = useState(1);\n  const [limitPost, setLimitPost] = useState(4);\n  const [post, setPost] = useState([]);\n  const contentRef = useRef(null);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n  useEffect(() => {\n    const contentElement = contentRef.current;\n    if (contentElement) {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            setIsScrolledToBottom(true);\n          } else {\n            setIsScrolledToBottom(false);\n          }\n        });\n      });\n      observer.observe(contentElement);\n      return () => {\n        observer.unobserve(contentElement);\n      };\n    }\n  }, []);\n  // LOAD POST ONE TIME\n  useEffect(() => {\n    fetchData(fromPage, limitPost);\n  }, []);\n  function fetchData(fromPage, toPage) {\n    // Gửi thông báo đến server để lấy bài viết\n    socket.emit(\"getpost\", fromPage, toPage);\n    socket.on(\"getpost\", function (post) {\n      setPost(post);\n    });\n  }\n  function fetchMoreData() {\n    const nextPost = limitPost + 3;\n\n    // Lấy thêm dữ liệu\n    const data = fetchData(limitPost, nextPost);\n    const newData = post.concat(data);\n    setPost(newData);\n\n    // Tăng giới hạn bài viết thêm + 3\n    setLimitPost(nextPost);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"A\",\n    ref: contentRef,\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: post.length,\n      next: fetchMoreData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this),\n      children: post.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        _id: item._id,\n        sender: item.sender,\n        content: {\n          text: item.content.text,\n          image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\"\n        },\n        creationTime: item.creationTime,\n        comments: item.comments\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(PostList, \"Z8EWcMLqpIMIYdMBMfHWMQfwOWw=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Post","io","InfiniteScroll","jsxDEV","_jsxDEV","server","process","env","REACT_APP_SEVER_IP","REACT_APP_SOCKET","socket","transports","PostList","_s","fromPage","setFromPage","limitPost","setLimitPost","post","setPost","contentRef","isScrolledToBottom","setIsScrolledToBottom","contentElement","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve","fetchData","toPage","emit","on","fetchMoreData","nextPost","data","newData","concat","id","ref","children","dataLength","length","next","hasMore","loader","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_id","sender","content","text","image","creationTime","comments","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.2/client/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Post from \"./Post\";\r\nimport io from \"socket.io-client\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst server =\r\n    process.env.REACT_APP_SEVER_IP + \":\" +\r\n    process.env.REACT_APP_SOCKET\r\n\r\nconst socket = io(server, { transports: [\"websocket\"] });\r\n\r\nexport default function PostList() {\r\n    const [fromPage, setFromPage] = useState(1)\r\n    const [limitPost, setLimitPost] = useState(4)\r\n    const [post, setPost] = useState([]);\r\n    const contentRef = useRef(null);\r\n    const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      const contentElement = contentRef.current;\r\n  \r\n      if (contentElement) {\r\n        const observer = new IntersectionObserver(entries => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              setIsScrolledToBottom(true);\r\n            } else {\r\n              setIsScrolledToBottom(false);\r\n            }\r\n          });\r\n        });\r\n  \r\n        observer.observe(contentElement);\r\n  \r\n        return () => {\r\n          observer.unobserve(contentElement);\r\n        };\r\n      }\r\n    }, []);\r\n    // LOAD POST ONE TIME\r\n    useEffect(() => {\r\n        fetchData(fromPage, limitPost)\r\n    }, []);\r\n    \r\n\r\n    function fetchData(fromPage, toPage)\r\n    {\r\n        // Gửi thông báo đến server để lấy bài viết\r\n        socket.emit(\"getpost\", fromPage, toPage);\r\n       \r\n        socket.on(\"getpost\", function(post) {\r\n            setPost(post)\r\n        })\r\n    }\r\n\r\n    function fetchMoreData() {\r\n        const nextPost = limitPost + 3\r\n            \r\n        // Lấy thêm dữ liệu\r\n        const data = fetchData(limitPost, nextPost)\r\n        const newData = post.concat(data)\r\n        setPost(newData)\r\n\r\n        // Tăng giới hạn bài viết thêm + 3\r\n        setLimitPost(nextPost)\r\n    }\r\n\r\n    return (\r\n        <div id=\"A\" ref={contentRef}>\r\n            <InfiniteScroll\r\n            dataLength={post.length}\r\n            next={fetchMoreData}\r\n            hasMore={true}\r\n            loader={<h4>Loading...</h4>}\r\n        >\r\n            {\r\n                post.map((item, index) => (\r\n                    <Post\r\n                        key={index}\r\n\r\n                        _id={item._id}\r\n\r\n                        sender={item.sender}\r\n\r\n                        content={{\r\n                            text: item.content.text,\r\n                            image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\",\r\n                        }}\r\n\r\n                        creationTime={item.creationTime}\r\n\r\n                        comments={item.comments}\r\n                    />\r\n                ))\r\n            }\r\n        </InfiniteScroll>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}