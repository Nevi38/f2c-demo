{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.5\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Popper = factory();\n})(this, function () {\n  'use strict';\n\n  var nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n  /**\n   * Determine if a function is implemented natively (as opposed to a polyfill).\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Function | undefined} fn the function to check\n   * @returns {Boolean}\n   */\n  var isNative = function (fn) {\n    return nativeHints.some(function (hint) {\n      return (fn || '').toString().indexOf(hint) > -1;\n    });\n  };\n  var isBrowser = typeof window !== 'undefined';\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n  function microtaskDebounce(fn) {\n    var scheduled = false;\n    var i = 0;\n    var elem = document.createElement('span');\n\n    // MutationObserver provides a mechanism for scheduling microtasks, which\n    // are scheduled *before* the next task. This gives us a way to debounce\n    // a function but ensure it's called *before* the next paint.\n    var observer = new MutationObserver(function () {\n      fn();\n      scheduled = false;\n    });\n    observer.observe(elem, {\n      attributes: true\n    });\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        elem.setAttribute('x-index', i);\n        i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n      }\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  // It's common for MutationObserver polyfills to be seen in the wild, however\n  // these rely on Mutation Events which only occur when an element is connected\n  // to the DOM. The algorithm used in this module does not use a connected element,\n  // and so we must ensure that a *native* MutationObserver is available.\n  var supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n  /**\n  * Create a debounced version of a method, that's asynchronously deferred\n  * but called in the minimum time possible.\n  *\n  * @method\n  * @memberof Popper.Utils\n  * @argument {Function} fn\n  * @returns {Function}\n  */\n  var debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n  /**\n   * Check if the given variable is a function\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Any} functionToCheck - variable to check\n   * @returns {Boolean} answer to: is a function?\n   */\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  /**\n   * Get CSS computed property of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Eement} element\n   * @argument {String} property\n   */\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    }\n    // NOTE: 1 DOM access here\n    var css = window.getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n\n  /**\n   * Returns the parentNode or the host of the element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} parent\n   */\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n    return element.parentNode || element.host;\n  }\n\n  /**\n   * Returns the scrolling parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} scroll parent\n   */\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n      return window.document.body;\n    }\n\n    // Firefox want us to check `-x` and `-y` variations as well\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n    return getScrollParent(getParentNode(element));\n  }\n\n  /**\n   * Returns the offset parent of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Element} offset parent\n   */\n  function getOffsetParent(element) {\n    // NOTE: 1 DOM access here\n    var offsetParent = element && element.offsetParent;\n    var nodeName = offsetParent && offsetParent.nodeName;\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return window.document.documentElement;\n    }\n\n    // .offsetParent will return the closest TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n    if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n    return offsetParent;\n  }\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY') {\n      return false;\n    }\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n\n  /**\n   * Finds the root node (document, shadowDOM root) of the given element\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} node\n   * @returns {Element} root node\n   */\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n    return node;\n  }\n\n  /**\n   * Finds the offset parent common to the two provided nodes\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element1\n   * @argument {Element} element2\n   * @returns {Element} common offset parent\n   */\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return window.document.documentElement;\n    }\n\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1;\n\n    // Get common ancestor container\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer;\n\n    // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n      return getOffsetParent(commonAncestorContainer);\n    }\n\n    // one of the nodes is inside shadowDOM, find which one\n    var element1root = getRoot(element1);\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n\n  /**\n   * Gets the scroll value of the given element in the given side (top and left)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {String} side `top` or `left`\n   * @returns {number} amount of scrolled pixels\n   */\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = window.document.documentElement;\n      var scrollingElement = window.document.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n    return element[upperSide];\n  }\n\n  /*\n   * Sum or subtract the element scroll values (left and top) from a given rect object\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} rect - Rect object you want to change\n   * @param {HTMLElement} element - The element from the function reads the scroll values\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n   * @return {Object} rect - The modifier rect object\n   */\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n\n  /*\n   * Helper to detect borders of a given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {CSSStyleDeclaration} styles\n   * Result of `getStyleComputedProperty` on the given element\n   * @param {String} axis - `x` or `y`\n   * @return {number} borders - The borders size of the given axis\n   */\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n  }\n\n  /**\n   * Tells if you are running Internet Explorer 10\n   * @method\n   * @memberof Popper.Utils\n   * @returns {Boolean} isIE10\n   */\n  var isIE10 = undefined;\n  var isIE10$1 = function () {\n    if (isIE10 === undefined) {\n      isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n    }\n    return isIE10;\n  };\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n  }\n  function getWindowSizes() {\n    var body = window.document.body;\n    var html = window.document.documentElement;\n    var computedStyle = isIE10$1() && window.getComputedStyle(html);\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  };\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n\n  /**\n   * Given element offsets, generate an output similar to getBoundingClientRect\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} offsets\n   * @returns {Object} ClientRect like output\n   */\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n\n  /**\n   * Get bounding client rect of given element\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} element\n   * @return {Object} client rect\n   */\n  function getBoundingClientRect(element) {\n    var rect = {};\n\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    if (isIE10$1()) {\n      try {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } catch (err) {}\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n\n    // subtract scrollbar size from sizes\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height;\n\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n    return getClientRect(result);\n  }\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var isIE10 = isIE10$1();\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n    var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (!isIE10 && isHTML) {\n      var marginTop = +styles.marginTop.split('px')[0];\n      var marginLeft = +styles.marginLeft.split('px')[0];\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft;\n\n      // Attach marginTop and marginLeft because in some circumstances we may need them\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n    if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n    return offsets;\n  }\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var html = window.document.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n    var scrollTop = getScroll(html);\n    var scrollLeft = getScroll(html, 'left');\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n    return getClientRect(offset);\n  }\n\n  /**\n   * Check if the given element is fixed or is inside a fixed parent\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @argument {Element} customContainer\n   * @returns {Boolean} answer to \"isFixed?\"\n   */\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n    return isFixed(getParentNode(element));\n  }\n\n  /**\n   * Computed the boundaries limits and return them\n   * @method\n   * @memberof Popper.Utils\n   * @param {HTMLElement} popper\n   * @param {HTMLElement} reference\n   * @param {number} padding\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n   * @returns {Object} Coordinates of the boundaries\n   */\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    // NOTE: 1 DOM access here\n    var boundaries = {\n      top: 0,\n      left: 0\n    };\n    var offsetParent = findCommonOffsetParent(popper, reference);\n\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(popper));\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = window.document.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = window.document.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n      // In case of HTML, we need a different computation\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    }\n\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n    return boundaries;\n  }\n  function getArea(_ref) {\n    var width = _ref.width,\n      height = _ref.height;\n    return width * height;\n  }\n\n  /**\n   * Utility used to transform the `auto` placement to the placement with more\n   * available space.\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n        height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n    var variation = placement.split('-')[1];\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n\n  /**\n   * Get offsets to the reference element\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} state\n   * @param {Element} popper - the popper element\n   * @param {Element} reference - the reference element (the popper will be relative to this)\n   * @returns {Object} An object containing the offsets which will be applied to the popper\n   */\n  function getReferenceOffsets(state, popper, reference) {\n    var commonOffsetParent = findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n  }\n\n  /**\n   * Get the outer sizes of the given element (offset size + margins)\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element\n   * @returns {Object} object containing width and height properties\n   */\n  function getOuterSizes(element) {\n    var styles = window.getComputedStyle(element);\n    var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n\n  /**\n   * Get the opposite placement of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement\n   * @returns {String} flipped placement\n   */\n  function getOppositePlacement(placement) {\n    var hash = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n\n  /**\n   * Get offsets to the popper\n   * @method\n   * @memberof Popper.Utils\n   * @param {Object} position - CSS position the Popper will get applied\n   * @param {HTMLElement} popper - the popper element\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n   * @param {String} placement - one of the valid placement options\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n   */\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0];\n\n    // Get popper node sizes\n    var popperRect = getOuterSizes(popper);\n\n    // Add position, width and height to our offsets object\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    };\n\n    // depending by the popper placement we have to compute its offsets slightly differently\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n    return popperOffsets;\n  }\n\n  /**\n   * Mimics the `find` method of Array\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    }\n\n    // use `filter` to obtain the same behavior of `find`\n    return arr.filter(check)[0];\n  }\n\n  /**\n   * Return the index of the matching object\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Array} arr\n   * @argument prop\n   * @argument value\n   * @returns index or -1\n   */\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    }\n\n    // use `find` + `indexOf` if `findIndex` isn't supported\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n\n  /**\n   * Loop trough the list of modifiers and run them in order,\n   * each of them will then edit the data object.\n   * @method\n   * @memberof Popper.Utils\n   * @param {dataObject} data\n   * @param {Array} modifiers\n   * @param {String} ends - Optional modifier name used as stopper\n   * @returns {dataObject}\n   */\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier.function) {\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n      var fn = modifier.function || modifier.fn;\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n        data = fn(data, modifier);\n      }\n    });\n    return data;\n  }\n\n  /**\n   * Updates the position of the popper, computing the new offsets and applying\n   * the new style.<br />\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\n   * @method\n   * @memberof Popper\n   */\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = data.placement;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n    data.offsets.popper.position = 'absolute';\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\n   * Helper used to know if the given modifier is enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @returns {Boolean}\n   */\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n        enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n\n  /**\n   * Get the prefixed supported property name\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} property (camelCase)\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n   */\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n    for (var i = 0; i < prefixes.length - 1; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n      if (typeof window.document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Destroy the popper\n   * @method\n   * @memberof Popper\n   */\n  function destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.left = '';\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? window : scrollParent;\n    target.addEventListener(event, callback, {\n      passive: true\n    });\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n    scrollParents.push(target);\n  }\n\n  /**\n   * Setup needed event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    window.addEventListener('resize', state.updateBound, {\n      passive: true\n    });\n\n    // Scroll event listener on scroll parents\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n    return state;\n  }\n\n  /**\n   * It will add resize/scroll events and start recalculating\n   * position of the popper element when they are triggered.\n   * @method\n   * @memberof Popper\n   */\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n\n  /**\n   * Remove event listeners used to update the popper position\n   * @method\n   * @memberof Popper.Utils\n   * @private\n   */\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    window.removeEventListener('resize', state.updateBound);\n\n    // Remove scroll event listener on scroll parents\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    });\n\n    // Reset state\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n\n  /**\n   * It will remove resize/scroll events and won't recalculate popper position\n   * when they are triggered. It also won't trigger onUpdate callback anymore,\n   * unless you call `update` method manually.\n   * @method\n   * @memberof Popper\n   */\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      window.cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\n   * Tells if a given input is a number\n   * @method\n   * @memberof Popper.Utils\n   * @param {*} input to check\n   * @return {Boolean}\n   */\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * Set the style to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the style to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = '';\n      // add unit if the value is numeric and is one of the following\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n\n  /**\n   * Set the attributes to the given popper\n   * @method\n   * @memberof Popper.Utils\n   * @argument {Element} element - Element to apply the attributes to\n   * @argument {Object} styles\n   * Object with a list of properties and values which will be applied to the element\n   */\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The same data object\n   */\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles);\n\n    // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n    setAttributes(data.instance.popper, data.attributes);\n\n    // if arrowElement is defined and arrowStyles has some properties\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n    return data;\n  }\n\n  /**\n   * Set the x-placement attribute before everything else because it could be used\n   * to add margins to the popper margins needs to be calculated to get the\n   * correct popper offsets.\n   * @method\n   * @memberof Popper.modifiers\n   * @param {HTMLElement} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Popper.js options\n   */\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n    popper.setAttribute('x-placement', placement);\n\n    // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n    setStyles(popper, {\n      position: 'absolute'\n    });\n    return options;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function computeStyle(data, options) {\n    var x = options.x,\n      y = options.y;\n    var popper = data.offsets.popper;\n\n    // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent);\n\n    // Styles\n    var styles = {\n      position: popper.position\n    };\n\n    // floor sides to avoid blurry text\n    var offsets = {\n      left: Math.floor(popper.left),\n      top: Math.floor(popper.top),\n      bottom: Math.floor(popper.bottom),\n      right: Math.floor(popper.right)\n    };\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right';\n\n    // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n    var prefixedProperty = getSupportedPropertyName('transform');\n\n    // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n    var left = void 0,\n      top = void 0;\n    if (sideA === 'bottom') {\n      top = -offsetParentRect.height + offsets.bottom;\n    } else {\n      top = offsets.top;\n    }\n    if (sideB === 'right') {\n      left = -offsetParentRect.width + offsets.right;\n    } else {\n      left = offsets.left;\n    }\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    }\n\n    // Attributes\n    var attributes = {\n      'x-placement': data.placement\n    };\n\n    // Update `data` attributes, styles and arrowStyles\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n    return data;\n  }\n\n  /**\n   * Helper used to know if the given modifier depends from another one.<br />\n   * It checks if the needed modifier is listed and enabled.\n   * @method\n   * @memberof Popper.Utils\n   * @param {Array} modifiers - list of modifiers\n   * @param {String} requestingName - name of requesting modifier\n   * @param {String} requestedName - name of requested modifier\n   * @returns {Boolean}\n   */\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n    return isRequired;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function arrow(data, options) {\n    // arrow depends on keepTogether in order to work\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n    var arrowElement = options.element;\n\n    // if arrowElement is a string, suppose it's a CSS selector\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement);\n\n      // if arrowElement is not found, don't run the modifier\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n    //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjuction\n    //\n\n    // top/left side\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n\n    // compute center of the popper\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n    // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n    var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');\n    var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;\n\n    // prevent arrowElement from being placed not contiguously to its popper\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = {};\n    data.offsets.arrow[side] = Math.round(sideValue);\n    data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n    return data;\n  }\n\n  /**\n   * Get the opposite placement variation of the given one\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement variation\n   * @returns {String} flipped placement variation\n   */\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n    return variation;\n  }\n\n  /**\n   * List of accepted placements to use as values of the `placement` option.<br />\n   * Valid placements are:\n   * - `auto`\n   * - `top`\n   * - `right`\n   * - `bottom`\n   * - `left`\n   *\n   * Each placement can have a variation from this list:\n   * - `-start`\n   * - `-end`\n   *\n   * Variations are interpreted easily if you think of them as the left to right\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n   * is right.<br />\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n   *\n   * Some valid examples are:\n   * - `top-end` (on top of reference, right aligned)\n   * - `right-start` (on right of reference, top aligned)\n   * - `bottom` (on bottom, centered)\n   * - `auto-right` (on the side with more space available, alignment depends by placement)\n   *\n   * @static\n   * @type {Array}\n   * @enum {String}\n   * @readonly\n   * @method placements\n   * @memberof Popper\n   */\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n  // Get rid of `auto` `auto-start` and `auto-end`\n  var validPlacements = placements.slice(3);\n\n  /**\n   * Given an initial placement, returns all the subsequent placements\n   * clockwise (or counter-clockwise).\n   *\n   * @method\n   * @memberof Popper.Utils\n   * @argument {String} placement - A valid placement (it accepts variations)\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n   * @returns {Array} placements including their variations\n   */\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n    var flipOrder = [];\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n      default:\n        flipOrder = options.behavior;\n    }\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference;\n\n      // using floor because the reference offsets may contain decimals we are not going to consider here\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n      // flip the variation if required\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n        data.placement = placement + (variation ? '-' + variation : '');\n\n        // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n    return data;\n  }\n\n  /**\n   * Converts a string containing value + unit into a px value number\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} str - Value + unit string\n   * @argument {String} measurement - `height` or `width`\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @returns {Number|String}\n   * Value in pixels, or original string if no values were extracted\n   */\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2];\n\n    // If it's not a number it's an operator, I guess\n    if (!value) {\n      return str;\n    }\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n\n  /**\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n   * @function\n   * @memberof {modifiers~offset}\n   * @private\n   * @argument {String} offset\n   * @argument {Object} popperOffsets\n   * @argument {Object} referenceOffsets\n   * @argument {String} basePlacement\n   * @returns {Array} a two cells array with x and y offsets in numbers\n   */\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0];\n\n    // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n    // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    });\n\n    // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    }\n\n    // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n    // Convert the values with units to absolute pixels to allow our computations\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op\n      // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, [])\n      // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    });\n\n    // Loop trough the offsets arrays and execute the operations\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @argument {Number|String} options.offset=0\n   * The offset value as described in the modifier description\n   * @returns {Object} The data object, properly modified\n   */\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var basePlacement = placement.split('-')[0];\n    var offsets = void 0;\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n    data.popper = popper;\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n    // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    }\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n    options.boundaries = boundaries;\n    var order = options.priority;\n    var popper = data.offsets.popper;\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n        return defineProperty({}, mainSide, value);\n      }\n    };\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n    data.offsets.popper = popper;\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1];\n\n    // if shift shiftvariation is specified, run the modifier\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by update method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n    return data;\n  }\n\n  /**\n   * @function\n   * @memberof Modifiers\n   * @argument {Object} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {Object} The data object, properly modified\n   */\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n    return data;\n  }\n\n  /**\n   * Modifier function, each modifier can have a function of this type assigned\n   * to its `fn` property.<br />\n   * These functions will be called on each update, this means that you must\n   * make sure they are performant enough to avoid performance bottlenecks.\n   *\n   * @function ModifierFn\n   * @argument {dataObject} data - The data object generated by `update` method\n   * @argument {Object} options - Modifiers configuration and options\n   * @returns {dataObject} The data object, properly modified\n   */\n\n  /**\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n   * needed by the library.\n   *\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n   * All the other properties are configurations that could be tweaked.\n   * @namespace modifiers\n   */\n  var modifiers = {\n    /**\n     * Modifier used to shift the popper on the start or end of its reference\n     * element.<br />\n     * It will read the variation of the `placement` property.<br />\n     * It can be one either `-end` or `-start`.\n     * @memberof modifiers\n     * @inner\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n    /**\n     * The `offset` modifier can shift your popper on both its axis.\n     *\n     * It accepts the following units:\n     * - `px` or unitless, interpreted as pixels\n     * - `%` or `%r`, percentage relative to the length of the reference element\n     * - `%p`, percentage relative to the length of the popper element\n     * - `vw`, CSS viewport width unit\n     * - `vh`, CSS viewport height unit\n     *\n     * For length is intended the main axis relative to the placement of the popper.<br />\n     * This means that if the placement is `top` or `bottom`, the length will be the\n     * `width`. In case of `left` or `right`, it will be the height.\n     *\n     * You can provide a single value (as `Number` or `String`), or a pair of values\n     * as `String` divided by a comma or one (or more) white spaces.<br />\n     * The latter is a deprecated method because it leads to confusion and will be\n     * removed in v2.<br />\n     * Additionally, it accepts additions and subtractions between different units.\n     * Note that multiplications and divisions aren't supported.\n     *\n     * Valid examples are:\n     * ```\n     * 10\n     * '10%'\n     * '10, 10'\n     * '10%, 10'\n     * '10 + 10%'\n     * '10 - 5vh + 3%'\n     * '-10px + 5vh, 5px - 6%'\n     * ```\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n     * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: offset,\n      /** @prop {Number|String} offset=0\n       * The offset value as described in the modifier description\n       */\n      offset: 0\n    },\n    /**\n     * Modifier used to prevent the popper from being positioned outside the boundary.\n     *\n     * An scenario exists where the reference itself is not within the boundaries.<br />\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n     * In this case we need to decide whether the popper should either:\n     *\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\n     * - if it should ignore the boundary and \"escape with its reference\"\n     *\n     * When `escapeWithReference` is set to`true` and reference is completely\n     * outside its boundaries, the popper will overflow (or completely leave)\n     * the boundaries in order to remain attached to the edge of the reference.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n      /**\n       * @prop {Array} [priority=['left','right','top','bottom']]\n       * Popper will try to prevent overflow following these priorities by default,\n       * then, it could overflow on the left and on top of the `boundariesElement`\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n      /**\n       * @prop {number} padding=5\n       * Amount of pixel used to define a minimum distance between the boundaries\n       * and the popper this makes sure the popper has always a little padding\n       * between the edges of its container\n       */\n      padding: 5,\n      /**\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\n       * Boundaries used by the modifier, can be `scrollParent`, `window`,\n       * `viewport` or any DOM element.\n       */\n      boundariesElement: 'scrollParent'\n    },\n    /**\n     * Modifier used to make sure the reference and its popper stay near eachothers\n     * without leaving any gap between the two. Expecially useful when the arrow is\n     * enabled and you want to assure it to point to its reference element.\n     * It cares only about the first axis, you can still have poppers with margin\n     * between the popper and its reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n    /**\n     * This modifier is used to move the `arrowElement` of the popper to make\n     * sure it is positioned between the reference element and its popper element.\n     * It will read the outer size of the `arrowElement` node to detect how many\n     * pixels of conjuction are needed.\n     *\n     * It has no effect if no `arrowElement` is provided.\n     * @memberof modifiers\n     * @inner\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: arrow,\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n    /**\n     * Modifier used to flip the popper's placement when it starts to overlap its\n     * reference element.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     *\n     * **NOTE:** this modifier will interrupt the current update cycle and will\n     * restart it if it detects the need to flip the placement.\n     * @memberof modifiers\n     * @inner\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: flip,\n      /**\n       * @prop {String|Array} behavior='flip'\n       * The behavior used to change the popper's placement. It can be one of\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n       * placements (with optional variations).\n       */\n      behavior: 'flip',\n      /**\n       * @prop {number} padding=5\n       * The popper will flip if it hits the edges of the `boundariesElement`\n       */\n      padding: 5,\n      /**\n       * @prop {String|HTMLElement} boundariesElement='viewport'\n       * The element which will define the boundaries of the popper position,\n       * the popper will never be placed outside of the defined boundaries\n       * (except if keepTogether is enabled)\n       */\n      boundariesElement: 'viewport'\n    },\n    /**\n     * Modifier used to make the popper flow toward the inner of the reference element.\n     * By default, when this modifier is disabled, the popper will be placed outside\n     * the reference element.\n     * @memberof modifiers\n     * @inner\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n    /**\n     * Modifier used to hide the popper when its reference element is outside of the\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n     * be used to hide with a CSS selector the popper when its reference is\n     * out of boundaries.\n     *\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * @memberof modifiers\n     * @inner\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n    /**\n     * Computes the style that will be applied to the popper element to gets\n     * properly positioned.\n     *\n     * Note that this modifier will not touch the DOM, it just prepares the styles\n     * so that `applyStyle` modifier can apply it. This separation is useful\n     * in case you need to replace `applyStyle` with a custom implementation.\n     *\n     * This modifier has `850` as `order` value to maintain backward compatibility\n     * with previous versions of Popper.js. Expect the modifiers ordering method\n     * to change in future major versions of the library.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n      /**\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3d transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties.\n       */\n      gpuAcceleration: true,\n      /**\n       * @prop {string} [x='bottom']\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n       * Change this if your popper should grow in a direction different from `bottom`\n       */\n      x: 'bottom',\n      /**\n       * @prop {string} [x='left']\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n       * Change this if your popper should grow in a direction different from `right`\n       */\n      y: 'right'\n    },\n    /**\n     * Applies the computed styles to the popper element.\n     *\n     * All the DOM manipulations are limited to this modifier. This is useful in case\n     * you want to integrate Popper.js inside a framework or view library and you\n     * want to delegate all the DOM manipulations to it.\n     *\n     * Note that if you disable this modifier, you must make sure the popper element\n     * has its position set to `absolute` before Popper.js can do its work!\n     *\n     * Just disable this modifier and define you own to achieve the desired effect.\n     *\n     * @memberof modifiers\n     * @inner\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n      /**\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n       * @prop {Boolean} gpuAcceleration=true\n       * If true, it uses the CSS 3d transformation to position the popper.\n       * Otherwise, it will use the `top` and `left` properties.\n       */\n      gpuAcceleration: undefined\n    }\n  };\n\n  /**\n   * The `dataObject` is an object containing all the informations used by Popper.js\n   * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n   * @name dataObject\n   * @property {Object} data.instance The Popper.js instance\n   * @property {String} data.placement Placement applied to popper\n   * @property {String} data.originalPlacement Placement originally defined on init\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n   * @property {Object} data.boundaries Offsets of the popper boundaries\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n   */\n\n  /**\n   * Default options provided to Popper.js constructor.<br />\n   * These can be overriden using the `options` argument of Popper.js.<br />\n   * To override an option, simply pass as 3rd argument an object with the same\n   * structure of this object, example:\n   * ```\n   * new Popper(ref, pop, {\n   *   modifiers: {\n   *     preventOverflow: { enabled: false }\n   *   }\n   * })\n   * ```\n   * @type {Object}\n   * @static\n   * @memberof Popper\n   */\n  var Defaults = {\n    /**\n     * Popper's placement\n     * @prop {Popper.placements} placement='bottom'\n     */\n    placement: 'bottom',\n    /**\n     * Whether events (resize, scroll) are initially enabled\n     * @prop {Boolean} eventsEnabled=true\n     */\n    eventsEnabled: true,\n    /**\n     * Set to true if you want to automatically remove the popper when\n     * you call the `destroy` method.\n     * @prop {Boolean} removeOnDestroy=false\n     */\n    removeOnDestroy: false,\n    /**\n     * Callback called when the popper is created.<br />\n     * By default, is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onCreate}\n     */\n    onCreate: function onCreate() {},\n    /**\n     * Callback called when the popper is updated, this callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.<br />\n     * By default, is set to no-op.<br />\n     * Access Popper.js instance with `data.instance`.\n     * @prop {onUpdate}\n     */\n    onUpdate: function onUpdate() {},\n    /**\n     * List of modifiers used to modify the offsets before they are applied to the popper.\n     * They provide most of the functionalities of Popper.js\n     * @prop {modifiers}\n     */\n    modifiers: modifiers\n  };\n\n  /**\n   * @callback onCreate\n   * @param {dataObject} data\n   */\n\n  /**\n   * @callback onUpdate\n   * @param {dataObject} data\n   */\n\n  // Utils\n  // Methods\n  var Popper = function () {\n    /**\n     * Create a new Popper.js instance\n     * @class Popper\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n     * @param {HTMLElement} popper - The HTML element used as popper.\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n     * @return {Object} instance - The generated Popper.js instance\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      };\n\n      // make update() debounced, so that it only runs at most once-per-tick\n      this.update = debounce(this.update.bind(this));\n\n      // with {} we create a new object with the options inside it\n      this.options = _extends({}, Popper.Defaults, options);\n\n      // init state\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      };\n\n      // get reference and popper elements (allow jQuery wrappers)\n      this.reference = reference.jquery ? reference[0] : reference;\n      this.popper = popper.jquery ? popper[0] : popper;\n\n      // Deep merge modifiers options\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      });\n\n      // Refactoring modifiers' list (Object => Array)\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      })\n      // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      });\n\n      // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      });\n\n      // fire the first update to position the popper in the right place\n      this.update();\n      var eventsEnabled = this.options.eventsEnabled;\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n      this.state.eventsEnabled = eventsEnabled;\n    }\n\n    // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n\n      /**\n       * Schedule an update, it will run on the next UI update available\n       * @method scheduleUpdate\n       * @memberof Popper\n       */\n\n      /**\n       * Collection of utilities useful when writing custom modifiers.\n       * Starting from version 1.7, this method is available only if you\n       * include `popper-utils.js` before `popper.js`.\n       *\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\n       * and will be removed in v2! Use the PopperUtils module directly instead.\n       * Due to the high instability of the methods contained in Utils, we can't\n       * guarantee them to follow semver. Use them at your own risk!\n       * @static\n       * @private\n       * @type {Object}\n       * @deprecated since version 1.8\n       * @member Utils\n       * @memberof Popper\n       */\n    }]);\n\n    return Popper;\n  }();\n\n  /**\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\n   * and lets you use it as replacement of a real DOM node.<br />\n   * You can use this method to position a popper relatively to a set of coordinates\n   * in case you don't have a DOM node to use as reference.\n   *\n   * ```\n   * new Popper(referenceObject, popperNode);\n   * ```\n   *\n   * NB: This feature isn't supported in Internet Explorer 10\n   * @name referenceObject\n   * @property {Function} data.getBoundingClientRect\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n   * @property {number} data.clientWidth\n   * An ES6 getter that will return the width of the virtual reference element.\n   * @property {number} data.clientHeight\n   * An ES6 getter that will return the height of the virtual reference element.\n   */\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n  return Popper;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","Popper","nativeHints","isNative","fn","some","hint","toString","indexOf","isBrowser","window","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","microtaskDebounce","scheduled","elem","document","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","setTimeout","supportsNativeMutationObserver","debounce","isFunction","functionToCheck","getType","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","getOffsetParent","offsetParent","documentElement","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","split","isIE10","isIE10$1","appVersion","getSize","computedStyle","Math","max","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","err","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","parseFloat","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","function","console","warn","enabled","update","isDestroyed","arrowStyles","flipped","options","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","disableEventListeners","removeOnDestroy","removeChild","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","prefixedProperty","willChange","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","querySelector","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","sideValue","min","round","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","_this","requestAnimationFrame","bind","jquery","update$$1","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","PopperUtils"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.5/client/src/statics/vendor/bootstrap/js/popper.js"],"sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.5\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Popper = factory());\n}(this, (function () { 'use strict';\n\nvar nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nvar isNative = (function (fn) {\n  return nativeHints.some(function (hint) {\n    return (fn || '').toString().indexOf(hint) > -1;\n  });\n});\n\nvar isBrowser = typeof window !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var scheduled = false;\n  var i = 0;\n  var elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  var observer = new MutationObserver(function () {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nvar supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = window.document.documentElement;\n    var scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function () {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = window.document.body;\n  var html = window.document.documentElement;\n  var computedStyle = isIE10$1() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = +styles.marginTop.split('px')[0];\n    var marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = window.document.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');\n  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nreturn Popper;\n\n})));\n//# sourceMappingURL=popper.js.map\n"],"mappings":"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AAG,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAEzHe,IAAI,CAAC/C,SAAS,GAAGwB,oBAAoB,CAACxB,SAAS,CAAC;IAChD+C,IAAI,CAACtF,OAAO,CAAC6B,MAAM,GAAG9B,aAAa,CAAC8B,MAAM,CAAC;IAE3C,OAAOyD,IAAI;EACb;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAID,SAAS,GAAG;IACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEgJ,KAAK,EAAE;MACL;MACA5S,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEsW;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE3M,MAAM,EAAE;MACN;MACAjG,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAE2J,MAAM;MACV;AACJ;AACA;MACIA,MAAM,EAAE;IACV,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEsM,eAAe,EAAE;MACf;MACAvS,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEiW,eAAe;MACnB;AACJ;AACA;AACA;AACA;MACIC,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;MAC5C;AACJ;AACA;AACA;AACA;AACA;MACIlM,OAAO,EAAE,CAAC;MACV;AACJ;AACA;AACA;AACA;MACIC,iBAAiB,EAAE;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE8K,YAAY,EAAE;MACZ;MACArR,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAE+U;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE/C,KAAK,EAAE;MACL;MACAtO,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEgS,KAAK;MACT;MACAhQ,OAAO,EAAE;IACX,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEqM,IAAI,EAAE;MACJ;MACA3K,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEqO,IAAI;MACR;AACJ;AACA;AACA;AACA;AACA;MACI+F,QAAQ,EAAE,MAAM;MAChB;AACJ;AACA;AACA;MACIpK,OAAO,EAAE,CAAC;MACV;AACJ;AACA;AACA;AACA;AACA;MACIC,iBAAiB,EAAE;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACE0M,KAAK,EAAE;MACL;MACAjT,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,KAAK;MACd;MACA/N,EAAE,EAAE2W;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEF,IAAI,EAAE;MACJ;MACA/S,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEyW;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACElF,YAAY,EAAE;MACZ;MACA7N,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEuR,YAAY;MAChB;AACJ;AACA;AACA;AACA;MACIE,eAAe,EAAE,IAAI;MACrB;AACJ;AACA;AACA;AACA;MACI9F,CAAC,EAAE,QAAQ;MACX;AACJ;AACA;AACA;AACA;MACIG,CAAC,EAAE;IACL,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEqF,UAAU,EAAE;MACV;MACAzN,KAAK,EAAE,GAAG;MACV;MACAqK,OAAO,EAAE,IAAI;MACb;MACA/N,EAAE,EAAEmR,UAAU;MACd;MACA0F,MAAM,EAAExF,gBAAgB;MACxB;AACJ;AACA;AACA;AACA;AACA;MACII,eAAe,EAAE/M;IACnB;EACF,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAIoS,QAAQ,GAAG;IACb;AACF;AACA;AACA;IACEtM,SAAS,EAAE,QAAQ;IAEnB;AACF;AACA;AACA;IACE8F,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;IACEb,eAAe,EAAE,KAAK;IAEtB;AACF;AACA;AACA;AACA;AACA;IACEhB,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG,CAAC,CAAC;IAEhC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG,CAAC,CAAC;IAEhC;AACF;AACA;AACA;AACA;IACEpB,SAAS,EAAEA;EACb,CAAC;;EAED;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;;EAEA;EACA;EACA,IAAIzN,MAAM,GAAG,YAAY;IACvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAASA,MAAMA,CAACkK,SAAS,EAAED,MAAM,EAAE;MACjC,IAAIiN,KAAK,GAAG,IAAI;MAEhB,IAAI3I,OAAO,GAAG3J,SAAS,CAAC/D,MAAM,GAAG,CAAC,IAAI+D,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACpF+B,cAAc,CAAC,IAAI,EAAE3G,MAAM,CAAC;MAE5B,IAAI,CAAC2Q,cAAc,GAAG,YAAY;QAChC,OAAOwG,qBAAqB,CAACD,KAAK,CAAC/I,MAAM,CAAC;MAC5C,CAAC;;MAED;MACA,IAAI,CAACA,MAAM,GAAGtM,QAAQ,CAAC,IAAI,CAACsM,MAAM,CAACiJ,IAAI,CAAC,IAAI,CAAC,CAAC;;MAE9C;MACA,IAAI,CAAC7I,OAAO,GAAGxG,QAAQ,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAACiX,QAAQ,EAAE1I,OAAO,CAAC;;MAErD;MACA,IAAI,CAAC5C,KAAK,GAAG;QACXyC,WAAW,EAAE,KAAK;QAClBO,SAAS,EAAE,KAAK;QAChBsB,aAAa,EAAE;MACjB,CAAC;;MAED;MACA,IAAI,CAAC/F,SAAS,GAAGA,SAAS,CAACmN,MAAM,GAAGnN,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS;MAC5D,IAAI,CAACD,MAAM,GAAGA,MAAM,CAACoN,MAAM,GAAGpN,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;;MAEhD;MACA,IAAI,CAACsE,OAAO,CAACd,SAAS,GAAG,CAAC,CAAC;MAC3BlG,MAAM,CAACwD,IAAI,CAAChD,QAAQ,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAACiX,QAAQ,CAACxJ,SAAS,EAAEc,OAAO,CAACd,SAAS,CAAC,CAAC,CAACK,OAAO,CAAC,UAAUkB,IAAI,EAAE;QAC9FkI,KAAK,CAAC3I,OAAO,CAACd,SAAS,CAACuB,IAAI,CAAC,GAAGjH,QAAQ,CAAC,CAAC,CAAC,EAAE/H,MAAM,CAACiX,QAAQ,CAACxJ,SAAS,CAACuB,IAAI,CAAC,IAAI,CAAC,CAAC,EAAET,OAAO,CAACd,SAAS,GAAGc,OAAO,CAACd,SAAS,CAACuB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACvI,CAAC,CAAC;;MAEF;MACA,IAAI,CAACvB,SAAS,GAAGlG,MAAM,CAACwD,IAAI,CAAC,IAAI,CAACwD,OAAO,CAACd,SAAS,CAAC,CAACzC,GAAG,CAAC,UAAUgE,IAAI,EAAE;QACvE,OAAOjH,QAAQ,CAAC;UACdiH,IAAI,EAAEA;QACR,CAAC,EAAEkI,KAAK,CAAC3I,OAAO,CAACd,SAAS,CAACuB,IAAI,CAAC,CAAC;MACnC,CAAC;MACD;MAAA,CACC9D,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;QACpB,OAAOD,CAAC,CAACtH,KAAK,GAAGuH,CAAC,CAACvH,KAAK;MAC1B,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA,IAAI,CAAC4J,SAAS,CAACK,OAAO,CAAC,UAAU2D,eAAe,EAAE;QAChD,IAAIA,eAAe,CAACvD,OAAO,IAAIpM,UAAU,CAAC2P,eAAe,CAACuF,MAAM,CAAC,EAAE;UACjEvF,eAAe,CAACuF,MAAM,CAACE,KAAK,CAAChN,SAAS,EAAEgN,KAAK,CAACjN,MAAM,EAAEiN,KAAK,CAAC3I,OAAO,EAAEkD,eAAe,EAAEyF,KAAK,CAACvL,KAAK,CAAC;QACpG;MACF,CAAC,CAAC;;MAEF;MACA,IAAI,CAACwC,MAAM,CAAC,CAAC;MAEb,IAAIsC,aAAa,GAAG,IAAI,CAAClC,OAAO,CAACkC,aAAa;MAC9C,IAAIA,aAAa,EAAE;QACjB;QACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC7B;MAEA,IAAI,CAAC/E,KAAK,CAAC8E,aAAa,GAAGA,aAAa;IAC1C;;IAEA;IACA;;IAGA1J,WAAW,CAAC/G,MAAM,EAAE,CAAC;MACnByH,GAAG,EAAE,QAAQ;MACbK,KAAK,EAAE,SAASwP,SAASA,CAAA,EAAG;QAC1B,OAAOnJ,MAAM,CAAClM,IAAI,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,EAAE;MACDwF,GAAG,EAAE,SAAS;MACdK,KAAK,EAAE,SAASyP,UAAUA,CAAA,EAAG;QAC3B,OAAO9H,OAAO,CAACxN,IAAI,CAAC,IAAI,CAAC;MAC3B;IACF,CAAC,EAAE;MACDwF,GAAG,EAAE,sBAAsB;MAC3BK,KAAK,EAAE,SAAS0P,uBAAuBA,CAAA,EAAG;QACxC,OAAO9G,oBAAoB,CAACzO,IAAI,CAAC,IAAI,CAAC;MACxC;IACF,CAAC,EAAE;MACDwF,GAAG,EAAE,uBAAuB;MAC5BK,KAAK,EAAE,SAAS2P,wBAAwBA,CAAA,EAAG;QACzC,OAAO9H,qBAAqB,CAAC1N,IAAI,CAAC,IAAI,CAAC;MACzC;;MAEA;AACJ;AACA;AACA;AACA;;MAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEE,CAAC,CAAC,CAAC;;IACH,OAAOjC,MAAM;EACf,CAAC,CAAC,CAAC;;EAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGAA,MAAM,CAAC0X,KAAK,GAAG,CAAC,OAAOjX,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGf,MAAM,EAAEiY,WAAW;EAC5E3X,MAAM,CAAC0T,UAAU,GAAGA,UAAU;EAC9B1T,MAAM,CAACiX,QAAQ,GAAGA,QAAQ;EAE1B,OAAOjX,MAAM;AAEb,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}