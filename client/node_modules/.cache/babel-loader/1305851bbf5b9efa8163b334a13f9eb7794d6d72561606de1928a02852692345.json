{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.0\\\\client\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPost } from \"../adapters/post\";\nimport Post from \"./Post\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://127.0.0.1:4000\", {\n  transports: [\"websocket\"]\n});\nexport default function PostList() {\n  _s();\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    // Nhận thông báo từ máy chủ\n    socket.on(\"postAdded\", newPost => {\n      // Khi có bài viết mới, cập nhật danh sách bài viết\n      setPost(prevPosts => [newPost, ...prevPosts]);\n    });\n    update();\n  }, []);\n  async function update() {\n    const posts = await getPost();\n    setPost(posts);\n  }\n  const handleNewPost = async newPost => {\n    // Gửi thông điệp tới máy chủ khi có bài viết mới\n    socket.emit(\"newPost\", newPost);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n      user: {\n        name: item.sender,\n        image: \"https://antimatter.vn/wp-content/uploads/2022/10/hinh-anh-gai-xinh-de-thuong-457x600.jpg\"\n      },\n      content: {\n        time: \"12 hours ago\",\n        image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\"\n      },\n      creationTime: item.creationTime\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n}\n_s(PostList, \"OTqVfaccSrZ2o8u1iZie8TEDImg=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","getPost","Post","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","transports","PostList","_s","post","setPost","on","newPost","prevPosts","update","posts","handleNewPost","emit","children","map","item","index","user","name","sender","image","content","time","creationTime","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.0/client/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getPost } from \"../adapters/post\";\r\nimport Post from \"./Post\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://127.0.0.1:4000\", { transports: [\"websocket\"] });\r\n\r\nexport default function PostList() {\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Nhận thông báo từ máy chủ\r\n        socket.on(\"postAdded\", (newPost) => {\r\n            // Khi có bài viết mới, cập nhật danh sách bài viết\r\n            setPost((prevPosts) => [newPost, ...prevPosts]);\r\n        });\r\n\r\n        update();\r\n    }, []);\r\n\r\n    async function update() {\r\n        const posts = await getPost();\r\n        setPost(posts);\r\n    }\r\n\r\n    const handleNewPost = async (newPost) => {\r\n        // Gửi thông điệp tới máy chủ khi có bài viết mới\r\n        socket.emit(\"newPost\", newPost);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                post.map((item, index) => (\r\n                    <Post\r\n                        key={index}\r\n                        user={{\r\n                            name: item.sender,\r\n                            image: \"https://antimatter.vn/wp-content/uploads/2022/10/hinh-anh-gai-xinh-de-thuong-457x600.jpg\",\r\n                        }}\r\n                        content={{\r\n                            time: \"12 hours ago\",\r\n                            image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\",\r\n                        }}\r\n                        creationTime={item.creationTime}\r\n                    />\r\n                ))\r\n            }\r\n            {/* Thêm giao diện để tạo bài viết mới và gọi handleNewPost khi bài viết được tạo */}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,EAAE;EAAEM,UAAU,EAAE,CAAC,WAAW;AAAE,CAAC,CAAC;AAEzE,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ;IACAQ,MAAM,CAACM,EAAE,CAAC,WAAW,EAAGC,OAAO,IAAK;MAChC;MACAF,OAAO,CAAEG,SAAS,IAAK,CAACD,OAAO,EAAE,GAAGC,SAAS,CAAC,CAAC;IACnD,CAAC,CAAC;IAEFC,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,MAAMA,CAAA,EAAG;IACpB,MAAMC,KAAK,GAAG,MAAMjB,OAAO,CAAC,CAAC;IAC7BY,OAAO,CAACK,KAAK,CAAC;EAClB;EAEA,MAAMC,aAAa,GAAG,MAAOJ,OAAO,IAAK;IACrC;IACAP,MAAM,CAACY,IAAI,CAAC,SAAS,EAAEL,OAAO,CAAC;EACnC,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAc,QAAA,EAEQT,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjBnB,OAAA,CAACH,IAAI;MAEDuB,IAAI,EAAE;QACFC,IAAI,EAAEH,IAAI,CAACI,MAAM;QACjBC,KAAK,EAAE;MACX,CAAE;MACFC,OAAO,EAAE;QACLC,IAAI,EAAE,cAAc;QACpBF,KAAK,EAAEL,IAAI,CAACM,OAAO,CAACD,KAAK,KAAK,EAAE,GAAI,iCAAgCL,IAAI,CAACM,OAAO,CAACD,KAAM,EAAC,GAAG;MAC/F,CAAE;MACFG,YAAY,EAAER,IAAI,CAACQ;IAAa,GAT3BP,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACJ;EAAC,gBAGR,CAAC;AAEX;AAACxB,EAAA,CA5CuBD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}