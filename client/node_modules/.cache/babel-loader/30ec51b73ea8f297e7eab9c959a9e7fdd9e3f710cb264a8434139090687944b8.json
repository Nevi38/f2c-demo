{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.0\\\\client\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Post from \"./Post\";\nimport io from \"socket.io-client\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SOCKET;\nconst socket = io(server, {\n  transports: [\"websocket\"]\n});\nexport default function PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const page = useRef(1);\n  const fetchMoreData = () => {\n    // Fetch more data when the user scrolls to the bottom\n    // Adjust the page number and fetch more posts\n    page.current++;\n    socket.emit(\"getpost\", page.current);\n  };\n  useEffect(() => {\n    const handleGetPost = newPosts => {\n      if (newPosts.length === 0) {\n        setHasMore(false);\n      } else {\n        setPosts([...posts, ...newPosts]);\n      }\n    };\n    const handlePostAdded = newPost => {\n      setPosts([newPost, ...posts]);\n    };\n    const handleCommentAdded = updatedPost => {\n      setPosts(prevPosts => {\n        const updatedIndex = prevPosts.findIndex(post => post._id === updatedPost._id);\n        if (updatedIndex !== -1) {\n          prevPosts[updatedIndex] = updatedPost;\n        }\n        return [...prevPosts];\n      });\n    };\n\n    // Initial data fetch\n    socket.emit(\"getpost\", page.current);\n    socket.on(\"getpost\", handleGetPost);\n    socket.on(\"postAdded\", handlePostAdded);\n    socket.on(\"commentAdded\", handleCommentAdded);\n    return () => {\n      socket.off(\"getpost\", handleGetPost);\n      socket.off(\"postAdded\", handlePostAdded);\n      socket.off(\"commentAdded\", handleCommentAdded);\n    };\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: posts.length,\n    next: fetchMoreData,\n    hasMore: hasMore,\n    loader: \"<h4>Loading...</h4}\",\n    children: posts.map(item => /*#__PURE__*/_jsxDEV(Post, {\n      _id: item._id,\n      sender: item.sender,\n      content: {\n        text: item.content.text,\n        image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\"\n      },\n      creationTime: item.creationTime,\n      comments: item.comments\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"AFO1NTSPjCavKE2tEXwevK8IQpc=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Post","io","InfiniteScroll","jsxDEV","_jsxDEV","server","process","env","REACT_APP_SEVER_IP","REACT_APP_SOCKET","socket","transports","PostList","_s","posts","setPosts","hasMore","setHasMore","page","fetchMoreData","current","emit","handleGetPost","newPosts","length","handlePostAdded","newPost","handleCommentAdded","updatedPost","prevPosts","updatedIndex","findIndex","post","_id","on","off","dataLength","next","loader","children","map","item","sender","content","text","image","creationTime","comments","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.0/client/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Post from \"./Post\";\r\nimport io from \"socket.io-client\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SOCKET;\r\n\r\nconst socket = io(server, { transports: [\"websocket\"] });\r\n\r\nexport default function PostList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const page = useRef(1);\r\n\r\n  const fetchMoreData = () => {\r\n    // Fetch more data when the user scrolls to the bottom\r\n    // Adjust the page number and fetch more posts\r\n    page.current++;\r\n    socket.emit(\"getpost\", page.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGetPost = (newPosts) => {\r\n      if (newPosts.length === 0) {\r\n        setHasMore(false);\r\n      } else {\r\n        setPosts([...posts, ...newPosts]);\r\n      }\r\n    };\r\n\r\n    const handlePostAdded = (newPost) => {\r\n      setPosts([newPost, ...posts]);\r\n    };\r\n\r\n    const handleCommentAdded = (updatedPost) => {\r\n      setPosts((prevPosts) => {\r\n        const updatedIndex = prevPosts.findIndex((post) => post._id === updatedPost._id);\r\n        if (updatedIndex !== -1) {\r\n          prevPosts[updatedIndex] = updatedPost;\r\n        }\r\n        return [...prevPosts];\r\n      });\r\n    };\r\n\r\n    // Initial data fetch\r\n    socket.emit(\"getpost\", page.current);\r\n\r\n    socket.on(\"getpost\", handleGetPost);\r\n    socket.on(\"postAdded\", handlePostAdded);\r\n    socket.on(\"commentAdded\", handleCommentAdded);\r\n\r\n    return () => {\r\n      socket.off(\"getpost\", handleGetPost);\r\n      socket.off(\"postAdded\", handlePostAdded);\r\n      socket.off(\"commentAdded\", handleCommentAdded);\r\n    };\r\n  }, [posts]);\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={posts.length}\r\n      next={fetchMoreData}\r\n      hasMore={hasMore}\r\n      loader=\"<h4>Loading...</h4}\">\r\n      {posts.map((item) => (\r\n        <Post\r\n          key={item._id}\r\n          _id={item._id}\r\n          sender={item.sender}\r\n          content={{\r\n            text: item.content.text,\r\n            image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\",\r\n          }}\r\n          creationTime={item.creationTime}\r\n          comments={item.comments}\r\n        />\r\n      ))}\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}