{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.4\\\\client\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport io from \"socket.io-client\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getLimitPost, getNumberPost } from \"../adapters/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SERVER_SOCKET;\nconst socket = io(server, {\n  transports: [\"websocket\"]\n});\nexport default function PostList({\n  postAdded\n}) {\n  _s();\n  const [maxPost, setMaxPost] = useState(0);\n  const [fromPage, setFromPage] = useState(1);\n  const [limitPost, setLimitPost] = useState(2);\n  const [post, setPost] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n\n  // LOAD POST ONE TIME\n  useEffect(() => {\n    fetchData(fromPage - 1, limitPost);\n    getMaxPost();\n  }, []);\n  useEffect(() => {\n    if (postAdded !== null) {\n      const newPost = [postAdded].concat(post);\n      setPost(newPost);\n      setPrevPostAdded(postAdded.length);\n      console.log(\"Danh sách bài viết hiện tại\", post);\n    }\n  }, [postAdded]);\n  async function getMaxPost() {\n    const MAXPOST = await getNumberPost();\n    setMaxPost(MAXPOST.numberPost);\n    if (MAXPOST.numberPost > 0) setHasMore(true);\n  }\n  function fetchData(fromPage, toPage) {\n    // Gửi thông báo đến server để lấy bài viết\n    socket.emit(\"getpost\", fromPage, toPage);\n    socket.on(\"getpost\", function (post) {\n      setPost(post);\n    });\n  }\n  async function fetchMoreData() {\n    if (post.length === maxPost) {\n      setHasMore(false);\n      return;\n    }\n    setTimeout(async () => {\n      const toPost = post.length + limitPost;\n\n      // Lấy thêm dữ liệu\n      const data = await getLimitPost(post.length, toPost);\n      const newData = post.concat(data);\n      setPost(newData);\n    }, 500);\n  }\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: post.length,\n    next: fetchMoreData,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this),\n    scrollableTarget: \"content\",\n    children: post.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n      _id: item._id,\n      sender: item.sender,\n      content: {\n        text: item.content.text,\n        image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\"\n      },\n      creationTime: item.creationTime,\n      comments: item.comments,\n      post: post,\n      setPost: setPost\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(PostList, \"43AQ82hPGo1elM/mwMA46As6mYk=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","Post","io","InfiniteScroll","getLimitPost","getNumberPost","jsxDEV","_jsxDEV","server","process","env","REACT_APP_SEVER_IP","REACT_APP_SERVER_SOCKET","socket","transports","PostList","postAdded","_s","maxPost","setMaxPost","fromPage","setFromPage","limitPost","setLimitPost","post","setPost","hasMore","setHasMore","fetchData","getMaxPost","newPost","concat","setPrevPostAdded","length","console","log","MAXPOST","numberPost","toPage","emit","on","fetchMoreData","setTimeout","toPost","data","newData","dataLength","next","loader","children","fileName","_jsxFileName","lineNumber","columnNumber","scrollableTarget","map","item","index","_id","sender","content","text","image","creationTime","comments","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.4/client/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Post from \"./Post\";\r\nimport io from \"socket.io-client\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { getLimitPost, getNumberPost } from \"../adapters/post\";\r\n\r\nconst server =\r\n    process.env.REACT_APP_SEVER_IP + \":\" +\r\n    process.env.REACT_APP_SERVER_SOCKET\r\n\r\nconst socket = io(server, { transports: [\"websocket\"] });\r\n\r\nexport default function PostList({ postAdded }) {\r\n    const [maxPost, setMaxPost] = useState(0)\r\n    const [fromPage, setFromPage] = useState(1)\r\n    const [limitPost, setLimitPost] = useState(2)\r\n    const [post, setPost] = useState([]);\r\n    const [hasMore, setHasMore] = useState(false)\r\n\r\n    // LOAD POST ONE TIME\r\n    useEffect(() => {\r\n        fetchData(fromPage - 1, limitPost)\r\n        \r\n        getMaxPost()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (postAdded !== null)\r\n        {\r\n            const newPost = [postAdded].concat(post);\r\n  \r\n            setPost(newPost)\r\n\r\n            setPrevPostAdded(postAdded.length)\r\n\r\n            console.log(\"Danh sách bài viết hiện tại\", post)\r\n        }\r\n    }, [postAdded]);\r\n\r\n    async function getMaxPost()\r\n    {\r\n        const MAXPOST = await getNumberPost()\r\n\r\n        setMaxPost(MAXPOST.numberPost)\r\n\r\n        if (MAXPOST.numberPost > 0)\r\n            setHasMore(true)\r\n    }\r\n\r\n    function fetchData(fromPage, toPage)\r\n    {\r\n        // Gửi thông báo đến server để lấy bài viết\r\n        socket.emit(\"getpost\", fromPage, toPage);\r\n       \r\n        socket.on(\"getpost\", function(post) {\r\n            setPost(post)\r\n        })\r\n    }\r\n\r\n    async function fetchMoreData() {\r\n        if (post.length === maxPost)\r\n        {\r\n            setHasMore(false)\r\n            return\r\n        }\r\n\r\n        setTimeout(async () => {\r\n            const toPost = post.length + limitPost\r\n            \r\n            // Lấy thêm dữ liệu\r\n            const data = await getLimitPost(post.length, toPost);\r\n            const newData = post.concat(data)\r\n\r\n            setPost(newData)\r\n\r\n        }, (500));\r\n    }\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={post.length}\r\n            next={fetchMoreData}\r\n            hasMore={hasMore}\r\n            loader={<h4>Loading...</h4>}\r\n            scrollableTarget=\"content\"\r\n        >\r\n            {\r\n                post.map((item, index) => (\r\n                    <Post\r\n                        key={index}\r\n\r\n                        _id={item._id}\r\n\r\n                        sender={item.sender}\r\n\r\n                        content={{\r\n                            text: item.content.text,\r\n                            image: item.content.image !== \"\" ? `http://127.0.0.1:3001/uploads/${item.content.image}` : \"\",\r\n                        }}\r\n\r\n                        creationTime={item.creationTime}\r\n\r\n                        comments={item.comments}\r\n\r\n                        post={post}\r\n\r\n                        setPost={setPost}\r\n                    />\r\n                ))\r\n            }\r\n        </InfiniteScroll>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAASC,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,MAAM,GACRC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAAG,GAAG,GACpCF,OAAO,CAACC,GAAG,CAACE,uBAAuB;AAEvC,MAAMC,MAAM,GAAGX,EAAE,CAACM,MAAM,EAAE;EAAEM,UAAU,EAAE,CAAC,WAAW;AAAE,CAAC,CAAC;AAExD,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACZ4B,SAAS,CAACR,QAAQ,GAAG,CAAC,EAAEE,SAAS,CAAC;IAElCO,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACZ,IAAIgB,SAAS,KAAK,IAAI,EACtB;MACI,MAAMc,OAAO,GAAG,CAACd,SAAS,CAAC,CAACe,MAAM,CAACP,IAAI,CAAC;MAExCC,OAAO,CAACK,OAAO,CAAC;MAEhBE,gBAAgB,CAAChB,SAAS,CAACiB,MAAM,CAAC;MAElCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEX,IAAI,CAAC;IACpD;EACJ,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EAEf,eAAea,UAAUA,CAAA,EACzB;IACI,MAAMO,OAAO,GAAG,MAAM/B,aAAa,CAAC,CAAC;IAErCc,UAAU,CAACiB,OAAO,CAACC,UAAU,CAAC;IAE9B,IAAID,OAAO,CAACC,UAAU,GAAG,CAAC,EACtBV,UAAU,CAAC,IAAI,CAAC;EACxB;EAEA,SAASC,SAASA,CAACR,QAAQ,EAAEkB,MAAM,EACnC;IACI;IACAzB,MAAM,CAAC0B,IAAI,CAAC,SAAS,EAAEnB,QAAQ,EAAEkB,MAAM,CAAC;IAExCzB,MAAM,CAAC2B,EAAE,CAAC,SAAS,EAAE,UAAShB,IAAI,EAAE;MAChCC,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC;EACN;EAEA,eAAeiB,aAAaA,CAAA,EAAG;IAC3B,IAAIjB,IAAI,CAACS,MAAM,KAAKf,OAAO,EAC3B;MACIS,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ;IAEAe,UAAU,CAAC,YAAY;MACnB,MAAMC,MAAM,GAAGnB,IAAI,CAACS,MAAM,GAAGX,SAAS;;MAEtC;MACA,MAAMsB,IAAI,GAAG,MAAMxC,YAAY,CAACoB,IAAI,CAACS,MAAM,EAAEU,MAAM,CAAC;MACpD,MAAME,OAAO,GAAGrB,IAAI,CAACO,MAAM,CAACa,IAAI,CAAC;MAEjCnB,OAAO,CAACoB,OAAO,CAAC;IAEpB,CAAC,EAAG,GAAI,CAAC;EACb;EAEA,oBACItC,OAAA,CAACJ,cAAc;IACX2C,UAAU,EAAEtB,IAAI,CAACS,MAAO;IACxBc,IAAI,EAAEN,aAAc;IACpBf,OAAO,EAAEA,OAAQ;IACjBsB,MAAM,eAAEzC,OAAA;MAAA0C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAC5BC,gBAAgB,EAAC,SAAS;IAAAL,QAAA,EAGtBzB,IAAI,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjBlD,OAAA,CAACN,IAAI;MAGDyD,GAAG,EAAEF,IAAI,CAACE,GAAI;MAEdC,MAAM,EAAEH,IAAI,CAACG,MAAO;MAEpBC,OAAO,EAAE;QACLC,IAAI,EAAEL,IAAI,CAACI,OAAO,CAACC,IAAI;QACvBC,KAAK,EAAEN,IAAI,CAACI,OAAO,CAACE,KAAK,KAAK,EAAE,GAAI,iCAAgCN,IAAI,CAACI,OAAO,CAACE,KAAM,EAAC,GAAG;MAC/F,CAAE;MAEFC,YAAY,EAAEP,IAAI,CAACO,YAAa;MAEhCC,QAAQ,EAAER,IAAI,CAACQ,QAAS;MAExBxC,IAAI,EAAEA,IAAK;MAEXC,OAAO,EAAEA;IAAQ,GAjBZgC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBb,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEM,CAAC;AAEzB;AAACpC,EAAA,CApGuBF,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}