{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.5\\\\client\\\\src\\\\components\\\\ListChat.js\",\n  _s = $RefreshSig$();\nimport FriendCard from './FriendCard';\nimport SearchBar from './SearchBar';\nimport { useEffect, useState, useRef } from 'react';\nimport socket from '../socket/socket-client';\nimport chatStyle from '../styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListChat({\n  setSelectedFriend\n}) {\n  _s();\n  const [listChat, setListChat] = useState([]);\n  const user = useRef(JSON.parse(sessionStorage.getItem(\"userAuth\")).user._id);\n  useEffect(() => {\n    // Emit an event to the server when the component mounts\n    socket.emit(\"getContacts\", user.current);\n\n    // Set up the event listeners\n    socket.on(\"getContacts\", getContacts);\n    socket.on(\"disconnect\", handleDisconnect);\n\n    // Clean up when the component unmounts or before the page is reloaded\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      socket.off(\"getContacts\", getContacts);\n      socket.off(\"disconnect\", handleDisconnect);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n\n  // Event handler for the beforeunload event\n  const handleBeforeUnload = event => {\n    // Attempt to reconnect before unloading the page\n    socket.connect();\n  };\n\n  // Event handler for the disconnect event\n  const handleDisconnect = () => {\n    // Handle disconnect logic, if needed\n    console.log(\"Disconnected from the server\");\n  };\n  function getContacts(contacts) {\n    setListChat(contacts);\n    setSelectedFriend(contacts[0]);\n  }\n  const handleFriendClick = friend => {\n    setSelectedFriend(friend);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"right-side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"list-listChat\",\n      className: \"wrap-list-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-25\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"heading ml-13\",\n          children: \"H\\u1ED9p th\\u01B0 \\u0111\\u1EBFn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-item\",\n          children: listChat.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFriendClick(contact),\n            className: \"row justify-content-space-between\",\n            children: /*#__PURE__*/_jsxDEV(FriendCard, {\n              name: `${contact.friend.firstName} ${contact.friend.lastName}`,\n              unreadMessage: 2,\n              avatar: contact.friend.avatar,\n              content: contact.latest_message.message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ListChat, \"oyHF3hpwzjW5Y/6/Hb7ozoeFes0=\");\n_c = ListChat;\nvar _c;\n$RefreshReg$(_c, \"ListChat\");","map":{"version":3,"names":["FriendCard","SearchBar","useEffect","useState","useRef","socket","chatStyle","jsxDEV","_jsxDEV","ListChat","setSelectedFriend","_s","listChat","setListChat","user","JSON","parse","sessionStorage","getItem","_id","emit","current","on","getContacts","handleDisconnect","window","addEventListener","handleBeforeUnload","off","removeEventListener","event","connect","console","log","contacts","handleFriendClick","friend","id","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","map","contact","index","onClick","name","firstName","lastName","unreadMessage","avatar","content","latest_message","message","text","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.5/client/src/components/ListChat.js"],"sourcesContent":["import FriendCard from './FriendCard';\r\nimport SearchBar from './SearchBar';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport socket from '../socket/socket-client';\r\nimport chatStyle from '../styles/chat.css';\r\n\r\nexport default function ListChat({ setSelectedFriend }) {\r\n  const [listChat, setListChat] = useState([]);\r\n  const user = useRef(JSON.parse(sessionStorage.getItem(\"userAuth\")).user._id);\r\n\r\n  useEffect(() => {\r\n    // Emit an event to the server when the component mounts\r\n    socket.emit(\"getContacts\", user.current);\r\n  \r\n    // Set up the event listeners\r\n    socket.on(\"getContacts\", getContacts);\r\n    socket.on(\"disconnect\", handleDisconnect);\r\n  \r\n    // Clean up when the component unmounts or before the page is reloaded\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n  \r\n    return () => {\r\n      socket.off(\"getContacts\", getContacts);\r\n      socket.off(\"disconnect\", handleDisconnect);\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  \r\n  }, []);\r\n  \r\n  // Event handler for the beforeunload event\r\n  const handleBeforeUnload = (event) => {\r\n    // Attempt to reconnect before unloading the page\r\n    socket.connect();\r\n  };\r\n  \r\n  // Event handler for the disconnect event\r\n  const handleDisconnect = () => {\r\n    // Handle disconnect logic, if needed\r\n    console.log(\"Disconnected from the server\");\r\n  };\r\n\r\n  function getContacts(contacts) {\r\n    setListChat(contacts);\r\n    setSelectedFriend(contacts[0]);\r\n  }\r\n\r\n  const handleFriendClick = (friend) => {\r\n    setSelectedFriend(friend);\r\n  };\r\n\r\n  return (\r\n    <div id=\"right-side-bar\">\r\n      <SearchBar placeholder=\"Search anything\" />\r\n      <div id='list-listChat' className='wrap-list-item'>\r\n        <div className=\"mt-25\">\r\n          <b className=\"heading ml-13\">Hộp thư đến</b>\r\n          <ul className=\"list-item\">\r\n            {listChat.map((contact, index) => (\r\n              <li key={index} onClick={() => handleFriendClick(contact)} className=\"row justify-content-space-between\">\r\n                <FriendCard\r\n                  name={`${contact.friend.firstName} ${contact.friend.lastName}`}\r\n                  unreadMessage={2}\r\n                  avatar={contact.friend.avatar}\r\n                  content={contact.latest_message.message.text}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}